resources:
  - name: signed_git
    type: GitRepo
    configuration:
      gitProvider: deepikaGithub
      path: deepikasl/jfrog_pipelines
      branches:
        include: .*
        exclude: master
  - name: signed_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: deepikaArt
 
pipelines:
  - name: test_signed_start
    steps:
      - name: create_info
        type: Bash
        configuration:
          environmentVariables:
            JFROG_CLI_BUILD_NAME: "deepika-test-sign"
            JFROG_CLI_BUILD_NUMBER: "${run_id}"
          inputResources:
            - name: signed_git
          integrations:
            - name: deepikaArt
          outputResources:
            - name: signed_buildinfo
        execution:
          onExecute:
            - cd $res_signed_git_resourcePath
            - jfrog rt upload ./README.md {{ .jfrog-pipelines.rootBucket }}/deepikaSignedPipelines/README.md --recursive=true
            - jfrog rt build-publish --detailed-summary $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER > summaryOutput.json
            - save_artifact_info file ./README.md
#             - save_artifact_info 'buildInfo' './summaryOutput.json' --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
#             - save_artifact_info buildInfo summaryOutput.json --build-name=$JFROG_CLI_BUILD_NAME --build-number=$JFROG_CLI_BUILD_NUMBER
 
  - name: test_signed_stop
    steps:
      - name: validate_info
        type: Bash
        configuration:
          inputResources:
            - name: signed_buildinfo
        execution:
          onExecute:
            - validate_artifact 'buildInfo' --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
#             - response=$(validate_artifact buildInfo --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER)
#             - validateResult=$(echo "$response" | jq '.result')
#             - if [ "$validateResult" != "true" ]; then echo "failed validation" && exit 1; fi
