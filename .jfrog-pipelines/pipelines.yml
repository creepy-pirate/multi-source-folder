resources:
  - name: S_HelmDeploy_5933_016_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: helmbuild
      buildNumber: 1

  - name: S_HelmDeploy_5933_016_GitRepo
    type: GitRepo
    configuration:
      gitProvider: deepikaGithub
      path: deepikasl/multi-source-folder
      branches:
        include: main

  - name: S_HelmDeploy_5933_016_ReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: dist
      name: name
      version: '1'

pipelines:
  - name: pipeline_S_HelmDeploy_5933_016_1
    configuration:
      environmentVariables:
        readOnly:
          JFROG_CLI_BUILD_NUMBER: ${run_id}
    steps:
      - name: S_HelmDeploy_5933_016_1
        type: Bash
        configuration:
          integrations:
            - name: art
          inputResources:
            - name: S_HelmDeploy_5933_016_GitRepo
          outputResources:
            - name: S_HelmDeploy_5933_016_BuildInfo
        execution:
          onExecute:
            - cd ${res_S_HelmDeploy_5933_016_GitRepo_resourcePath}/tests/core/helmdeploy
            - jfrog rt upload index.yaml test-automation-helm-local/S_HelmDeploy_5933_016/index.yaml --build-name=$JFROG_CLI_BUILD_NAME --build-number=$JFROG_CLI_BUILD_NUMBER
            - jfrog rt upload simplehelm-0.3.0.tgz test-automation-helm-local/S_HelmDeploy_5933_016/simplehelm-0.3.0.tgz --build-name=$JFROG_CLI_BUILD_NAME --build-number=$JFROG_CLI_BUILD_NUMBER
            - jfrog rt build-collect-env $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - jfrog rt build-publish $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - write_output S_HelmDeploy_5933_016_BuildInfo buildName=$JFROG_CLI_BUILD_NAME buildNumber=$JFROG_CLI_BUILD_NUMBER

      - name: S_HelmDeploy_5933_016_2
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: S_HelmDeploy_5933_016
          releaseBundleVersion: ${run_id}
          dryRun: false
          sign: true
          inputResources:
            - name: S_HelmDeploy_5933_016_BuildInfo
          outputResources:
            - name: S_HelmDeploy_5933_016_ReleaseBundle

  - name: pipeline_S_HelmDeploy_5933_016_2
    configuration:
      environmentVariables:
        readOnly:
          K8S_NAMESPACE: "pipe-master-pool"
          JFROG_CLI_BUILD_NUMBER: ${run_id}
          RELEASE_NAME: "s-helmdeploy-5933-016-${run_id}"
      inputResources:
        - name: S_HelmDeploy_5933_016_ReleaseBundle
    steps:
      - name: S_HelmDeploy_5933_016_3
        type: HelmDeploy
        configuration:
          integrations:
            - name: art
            - name: kube
          helmVersion: 3
          releaseName: "${RELEASE_NAME}"
          chartPath: test-automation-helm-local/S_HelmDeploy_5933_016
          chartName: simplehelm
          chartVersion: 0.3.0
          flags: "--force --wait --timeout 900s -n ${K8S_NAMESPACE} --set image.repository=trriplejay/simplehelm --set image.tag=latest"
          valueFilePaths:
            - values.yaml
          lint: true
          lintFlags: "--strict"
          test: true
          testFlags: "-n ${K8S_NAMESPACE}"
        execution:
          onComplete:
            - echo "Deleting distribution..."
            - distributionUrl="$res_S_HelmDeploy_5933_016_ReleaseBundle_sourceDistribution_url"
            - releaseBundleName=$(find_resource_variable S_HelmDeploy_5933_016_ReleaseBundle name)
            - releaseBundleVersion=$(find_resource_variable S_HelmDeploy_5933_016_ReleaseBundle version)
            - curlOptions="--silent --retry 3 -w %{http_code} -u ${res_S_HelmDeploy_5933_016_ReleaseBundle_sourceDistribution_user}:${res_S_HelmDeploy_5933_016_ReleaseBundle_sourceDistribution_apikey}"
            - if [ "$no_verify_ssl" == "true" ]; then curlOptions+=" --insecure"; fi
            - "status=$(curl $curlOptions -XDELETE \"$distributionUrl/api/v1/release_bundle/$releaseBundleName/$releaseBundleVersion\")"
            - if [ $status -gt 299 ]; then return 1; fi
            - if [ $status -eq 204 ]; then echo "Deleted release bundle $releaseBundleName/$releaseBundleVersion successfully"; fi
            - echo "Deleting helm resources..."
            - helm3 delete ${RELEASE_NAME} --namespace $K8S_NAMESPACE
